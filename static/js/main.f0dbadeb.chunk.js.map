{"version":3,"sources":["components/header/header.js","components/footer/footer.js","hooks/useFetch.js","components/form/form.js","app.js","index.js"],"names":["Header","Footer","getApi","useFetch","nothing","useState","readData","setReadData","handleGet","a","fetch","response","json","data","Object","assign","oneMore","console","log","method","headers","body","JSON","stringify","id","idx","newNote","toString","status","once","Form","temp","handlePost","handleDelete","setReadDataFetch","useEffect","keys","length","document","title","onSubmit","e","preventDefault","name","target","value","note","diff","difficulty","reset","type","map","val","key","className","onClick","_id","deleteState","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f0dbadeb.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nconst Header = () => {\n\n  return(\n    <h1> Death Note !</h1>\n  );\n};\n\n\nexport default Header ;","/* eslint-disable no-unused-vars */\nimport React from 'react' ;\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>DanTe!! Peace Out !!</p>\n    </footer>\n  );\n};\n\n\nexport default Footer ;\n  ","import {useState} from 'react';\n\nconst api = 'http://localhost:3009/addnote';\nconst getApi = 'http://localhost:3009/showall';\n\nconst useFetch = (nothing)=>{\n\n  const[readData , setReadData] = useState({});\n\n  const handleGet = async () =>{\n    let response = await fetch(getApi);\n    let data = await response.json();\n    let tempData = Object.assign({},readData);\n    tempData = {} ;\n    setReadData(tempData);\n\n    let oneMore = Object.assign({},readData) ;\n\n    Object.assign(oneMore ,...[data]);\n\n    setReadData(oneMore);\n  };\n\n  const handlePost = async (data) => {\n    console.log('did i ??????????', data);\n    await fetch(api, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify(data), \n    });\n    handleGet();\n  };\n\n  const handleDelete = async(id , idx) => {\n\n    await fetch(`${getApi}/${id}`, {\n      method:'DELETE',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      }},\n    );\n\n\n    console.log('idx', typeof idx,idx);\n    let newNote = Object.assign({},readData);\n    console.log('check check check',newNote[idx]);\n    delete newNote[idx];\n    console.log('after delete', newNote);\n    setReadData(newNote);\n\n    console.log('readData', readData);\n    // handleGet();\n      \n  };\n\n\n  const setReadDataFetch = (id) => {\n    id = id.toString();\n    let newNote = Object.assign({},readData);\n    if(newNote[id].status === 'complete'){\n      newNote[id].status = 'incomplete';\n    }else{\n      newNote[id].status = 'complete';\n    }\n    setReadData(newNote);\n  };\n\n\n  return[readData , handlePost , handleGet , handleDelete, setReadDataFetch];\n\n};\n\nexport default useFetch ;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport {useState , useEffect} from 'react';\nimport useFetch from '../../hooks/useFetch.js';\n\n\nlet once = 0 ;\n\nconst Form = () => {\n\n  let temp ;\n  const [readData, handlePost, handleGet , handleDelete,setReadDataFetch] = useFetch(temp);\n  \n  if(once === 0){\n    handleGet();\n    once++ ;\n  } \n    \n\n  let handleSubmit = (e) => {\n    e.preventDefault();    \n    let name = e.target.name.value;\n    let note = e.target.note.value;\n    let status = e.target.status.value;\n    let diff = e.target.difficulty.value;\n    \n    let newNote = {'name' : name , 'note': note , 'status':status , 'diff': diff};\n    // take the data from here to post it <====   \n    handlePost(newNote);\n\n    e.target.reset();\n  };\n\n\n  useEffect(()=>{\n\n    let id = Object.keys(readData).length.toString() ;\n\n    if(id > 0){\n      document.title = `${id} Todo left`;\n    }\n  });\n\n\n  let changeState = (id) =>{\n    setReadDataFetch(id);\n  };\n\n  let deleteState = (_id,idx) => {\n    handleDelete(_id, idx);\n  };\n\n\n  return(\n    \n    <>\n      {/* {console.log('**render**', readData , noteBook)} */}\n\n      <div>\n        <form onSubmit = {handleSubmit}>\n\n          <label>\n        Name : \n            <input name=\"name\" />\n          </label>\n\n          <br/>\n\n          <label>\n        Note :\n            <textarea name=\"note\"  />\n          </label>\n\n          <br/>\n\n          <label>complete\n            <input type=\"radio\" name=\"status\" value=\"complete\" />\n          </label>\n          <label>Incomplete\n            <input type=\"radio\" name=\"status\" value=\"Incomplete\" />\n          </label>\n\n          <br/>\n\n          <label>difficulty:\n            <select name= \"difficulty\">\n              <option value =\"1\">1</option>\n              <option value =\"2\">2</option>\n              <option value =\"3\">3</option>\n              <option value =\"4\">4</option>\n              <option value =\"5\">5</option>\n            </select>\n          </label>\n\n          <br/>\n          <button type=\"submit\" id=\"sub\">Submit</button>\n\n        </form>\n      </div>\n\n      <br/>\n\n      <div>\n        <h2>ToDo List:</h2>\n        <ul>\n          {/* <li>{noteBook}</li> */}\n          \n          {/* {console.log('boook' , readData)} */}\n          { \n            Object.keys(readData).map((val, idx) => {\n              return<fieldset key={idx} className={readData[val].status} > <legend>Name: {readData[val].name}</legend>\n                <p> ToDo: {readData[val].note} </p>\n                <li onClick={()=> changeState(idx)}> Status: {readData[val].status} </li>\n                <li> Difficulty: {readData[val].diff} </li>\n                <button onClick={()=> deleteState(readData[val]._id , idx)} >Delete</button>\n                \n              </fieldset>;\n            })}\n\n\n\n        </ul>\n      </div>\n\n    </>\n\n  );\n};\n\n\nexport default Form ;\n","/* eslint-disable no-unused-vars */\n// dependencies \nimport React from 'react';\n\n// components \nimport Header from './components/header/header.js';\nimport Footer from './components/footer/footer.js';\nimport Form from './components/form/form.js';\n\n//style\nimport './app.scss';\n\n\n\nconst App = ()=>{\n\n\n  return(\n    <>\n      <Header />\n      <Form />\n      <Footer />\n    </>\n  );\n};\n\nexport default App ;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css';\n\nfunction Main() {\n\n  return(\n\n    <>\n      <App />\n    </>\n\n  );\n  \n}\n\n\n// ====> method to ===> destination //\nReactDOM.render(<Main />, document.getElementById('root'));\n\n"],"sourceRoot":""}